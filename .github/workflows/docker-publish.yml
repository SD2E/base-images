name: Docker publish

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

  pull_request:
    # run tests only for pull requests to `master`
    branches:
      - master

  workflow_dispatch:

env:
  # Docker image
  # DOCKER_PASSWORD accessible via secrets
  DOCKER_USER: enho
  DOCKER_ORG: enho
  DOCKER_REPO: reactors
  DOCKER_TAG: python3
  DOCKER_IMAGE: $DOCKER_ORG/$DOCKER_REPO:$DOCKER_TAG

  # Tapis credentials for testing
  # TAPIS_PASSWORD accessible via secrets
  TAPIS_BASE_URL: https://api.sd2e.org/
  TAPIS_USERNAME: eho

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Test env
        run: |
          echo $DOCKER_ORG
          echo ${DOCKER_ORG}
          echo $DOCKER_IMAGE
          echo ${DOCKER_IMAGE}
          exit 1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cookiecutter
      - name: Build image
        run: DOCKER_IMAGE=${DOCKER_IMAGE} make -B image
      - name: Run tests
        run: |
          echo ${DOCKER_IMAGE}
          echo $DOCKER_IMAGE
          docker run --rm -e TAPIS_BASE_URL=${TAPIS_BASE_URL} \
            -e TAPIS_USERNAME=${TAPIS_USERNAME} \
            -e TAPIS_PASSWORD=${{ secrets.TAPIS_PASSWORD }} \
            ${DOCKER_IMAGE}

  # Push image to hub.docker.com
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: DOCKER_IMAGE=${DOCKER_IMAGE} make image

      - name: Log into registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USER --password-stdin

      - name: Push image
        run: docker push ${DOCKER_IMAGE}

  push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          push: true
          username: $DOCKER_USER
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: $DOCKER_IMAGE